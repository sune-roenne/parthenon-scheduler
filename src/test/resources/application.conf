connections : [
   {
      name : "primary"
      driver-class : "oracle.jdbc.OracleDriver"
	  url : "jdbc:oracle:thin:@myhost:1521:orcl"
	  user : "TestUser"
	  password : "TestUser"
   }
]

# In Minutes
special-days-update-frequency : 24

#holidays: {
#   connection : "primary"
#   # Must return a relation of a single column of type java.sql.Date
#   query : """select * from """
#   # In Hours
#   update-frequency : 24
#}

#irregular-bank-days : {
#   connection : "primary"
#   # Must return a relation of a single column of type java.sql.Date
#   query : """select * from """
#   # In Hours
#   update-frequency : 24
#}

executions : [
   {
      batch-group-name : "TEST_GROUP"
	  # Format : HH:mm"
	  time-of-day : "08:00"
	  output-file-name : """./output/testoutput.xml"""
	  xml-prefix : ["Request"]
	  group-element-name : "BatchJobGroup"
	  batch-date-element-name : "BatchDate"
	  # Optional. Must be valid scala-expression returning Boolean. Implicits : holidays and bankdays (both : Set[java.sql.Date]) and today : java.sql.Date and date extension method: isBankDay
	  execution-day-condition : """today isBankDay"""
	  date-format : "dd-MM-yyyy"
	  output-file-encoding : "UTF-8"
	  # Must return a java.sql.Date
	  batch-date-expression : "val ret = today; while(ret isBankDay) ret.setTime(ret.getTime - 24*60*60*1000L); ret"
   }
]

